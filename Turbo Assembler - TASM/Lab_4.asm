.MODEL SMALL
.DATA
	NUM_UNO DB 13, 10, 'Ingrese el numero Uno: $'
	NUM_DOS DB 13, 10, 'Ingrese el numero Dos: $'
	TEXTO_R DB 13, 10, 'Resultado Multiplicacion: $'
	TEXTO_S DB 13, 10, 'Resultado Division: $'
	TEXTO_T DB 13, 10, 'El primer numero ingresado se le sacara factorial $'
	TEXTO_U DB 'Los numeros de un digito debe ser ingresados asi <0><digito> $'
	TEXTO_V DB 13, 10, 'Factores: $'
	TEXTO_W DB 13, 10, 'y sera combertido a binario $'
	TEXTO_Y DB 13, 10, 'Binario: $'
	
	TMP_UNO DW ?
	TMP_DOS DW ?
	
	UNIDAD DB ?
	DECENA DB ?
	TMP DW ?
	RESULTADO DW ?
	
	B1 DW ?
	B2 DW ?
	B3 DW ?
	B4 DW ?
	B5 DW ?
	B6 DW ?
	B7 DW ?
.STACK
.CODE
MAIN:
	MOV AX, @DATA 		; INICIALIZACIÓN
	MOV DS, AX
	XOR AX, AX	
	LEA DX, TEXTO_U
	MOV AH, 09H
	INT 21H
	XOR DX, DX
	XOR AX, AX	
	LEA DX, TEXTO_T
	MOV AH, 09H
	INT 21H
	
	XOR DX, DX
	XOR AX, AX			;Multiplicación
	LEA DX, NUM_UNO		; Escribe Ingrese el numero Uno:
	MOV AH, 09H
	INT 21H
	MOV AH, 01H			;Leer NUM_UNO
	INT 21H
	SUB AL, 30H			;ASCCI
	MOV DECENA, AL 		
	INT 21H
	SUB AL, 30H			;ASCCI
	MOV UNIDAD, AL		
	MOV AL, 0AH
	MOV BL, DECENA
	MUL BL
	MOV BL, UNIDAD
	ADD AX, BX 
	MOV TMP_UNO, AX		;GUARDAR NUM_UNO COMO CONTADOR
	MOV CX, AX
	DEC CX
	LEA DX, NUM_DOS		;Escribe Ingrese el numero Dos:
	MOV AH, 09H
	INT 21H
	MOV AH, 01H			;Leer NUM_DOS
	INT 21H
	SUB AL, 30H
	MOV DECENA, AL
	INT 21H
	SUB AL, 30H
	MOV UNIDAD, AL 
	MOV AL, 0AH
	MOV BL, DECENA
	MUL BL
	MOV BL, UNIDAD
	ADD AX, BX
	MOV TMP_DOS, AX
	
MULTIPLICACION:			;Sumas sucesivas
	ADD AX, TMP_DOS 
LOOP MULTIPLICACION
	MOV RESULTADO, AX
	LEA DX, TEXTO_R
	MOV AH, 09H
	INT 21H
	MOV AX, RESULTADO
	MOV BX, 3E8H
	MOV DX, 0H
	DIV BX
	CMP AX, 0H
	JE ERROR_MILLAR
	MOV TMP, AX
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	MOV AX, TMP
	MOV BX, 3E8H
	MUL BX
	SUB RESULTADO, AX
	
ERROR_MILLAR:			;Por si no viene el caracter de millar
	MOV AX, RESULTADO
	MOV BX, 64H
	MOV DX, 0H
	DIV BX
	MOV TMP, AX
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	MOV AX, TMP
	MOV BX, 64H
	MUL BX
	SUB RESULTADO, AX
	MOV AX, RESULTADO
	MOV BX, 0AH
	MOV DX, 0H
	DIV BX
	MOV TMP, AX
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	MOV AX, TMP
	MOV BX, 0AH
	MUL BX
	SUB RESULTADO, AX
	MOV AX, RESULTADO
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	SUB RESULTADO, AX
	
	LEA DX, TEXTO_S			;División
	MOV AH, 09H
	INT 21H
	XOR AX, AX
	MOV AX, TMP_UNO
	XOR BX, BX
	MOV BX, 0H
	JMP DIVISION
INCRIMENTAR:
	INC BX
DIVISION:
	CMP AX, TMP_DOS
	JS PROCEDIMIENTO
	SUB AX, TMP_DOS
	JMP INCRIMENTAR
PROCEDIMIENTO:
	MOV RESULTADO, BX
	MOV AX, BX
	MOV BX, 0AH
	MOV DX, 0H
	DIV BX
	MOV TMP, AX
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	MOV AX, TMP
	MOV BX, 0AH
	MUL BX
	SUB RESULTADO, AX
	MOV AX, RESULTADO
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	SUB RESULTADO, AX
	
	MOV AX, TMP_UNO		; Factorial
	MOV TMP_DOS, AX
	LEA DX, TEXTO_V
	MOV AH, 09H
	INT 21H
FACTORIAL:
	XOR AX, AX
	XOR DX, DX
	MOV AX, TMP_UNO
	DIV TMP_DOS
	CMP DX, 0H
	JZ ESCIBIR
RESIDUO:
	DEC TMP_DOS
	CMP TMP_DOS, 0H
	JZ BINARIO
	JMP FACTORIAL
ESCIBIR:
	MOV RESULTADO, AX
	MOV BX, 0AH
	MOV DX, 0H
	DIV BX
	MOV TMP, AX
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	MOV AX, TMP
	MOV BX, 0AH
	MUL BX
	SUB RESULTADO, AX
	MOV AX, RESULTADO
	ADD AX, 30H
	MOV DX, AX
	MOV AH, 02H
	INT 21H
	SUB RESULTADO, AX
	MOV DL, 20H
	INT 21H
	JMP RESIDUO
	
BINARIO:
	XOR AX, AX
	MOV AX, TMP_UNO
	MOV CX, 7H
	MOV BX, 2H
CICLO1:
	XOR DX, DX
	DIV BX
	CMP CX, 7H
	JZ B7_
	CMP CX, 6H
	JZ B6_
	CMP CX, 5H
	JZ B5_
	CMP CX, 4H
	JZ B4_
	CMP CX, 3H
	JZ B3_
	CMP CX, 2H
	JZ B2_
	CMP CX, 1H
	JZ B1_
	JMP CICLO2
B7_:
	MOV B7, DX
	JMP CICLO2
B6_:
	MOV B6, DX
	JMP CICLO2
B5_:
	MOV B5, DX
	JMP CICLO2
B4_:
	MOV B4, DX
	JMP CICLO2
B3_:
	MOV B3, DX
	JMP CICLO2
B2_:
	MOV B2, DX
	JMP CICLO2
B1_:
	MOV B1, DX

CICLO2:
LOOP CICLO1

	XOR DX, DX
	XOR AX, AX	
	LEA DX, TEXTO_Y
	MOV AH, 09H
	INT 21H
	
	ADD B1, 30H
	MOV DX, B1
	MOV AH, 02H
	INT 21H
	ADD B2, 30H
	MOV DX, B2
	INT 21H
	ADD B3, 30H
	MOV DX, B3
	INT 21H
	ADD B4, 30H
	MOV DX, B4
	INT 21H
	ADD B5, 30H
	MOV DX, B5
	INT 21H
	ADD B6, 30H
	MOV DX, B6
	INT 21H
	ADD B7, 30H
	MOV DX, B7
	INT 21H
		
	MOV AH, 4CH
	INT 21H
END
